'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.match = exports.enumerator = exports.maxlength = exports.minlength = exports.max = exports.min = exports.required = undefined;

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var required = exports.required = function required(_required, value, param) {
  return {
    valid: !_required || !_lodash2.default.isNil(value) && !_lodash2.default.isNaN(value) && value !== '',
    message: param.name + ' is required'
  };
};

var min = exports.min = function min(_min, value, param) {
  return {
    valid: _lodash2.default.isNil(value) || value >= _min,
    message: param.name + ' must be greater than or equal to ' + _min
  };
};

var max = exports.max = function max(_max, value, param) {
  return {
    valid: _lodash2.default.isNil(value) || value <= _max,
    message: param.name + ' must be lower than or equal to ' + _max
  };
};

var minlength = exports.minlength = function minlength(_minlength, value, param) {
  var valid = true;
  if (_lodash2.default.isNumber(_minlength) && !_lodash2.default.isNil(value)) {
    if (param.option('multiple')) {
      value = _lodash2.default.isArray(param.value()) ? param.value() : [param.value()];
    }
    valid = value.length >= _minlength;
  }
  return {
    valid: valid,
    message: param.name + ' must have length greater than or equal to ' + _minlength
  };
};

var maxlength = exports.maxlength = function maxlength(_maxlength, value, param) {
  var valid = true;
  if (_lodash2.default.isNumber(_maxlength) && !_lodash2.default.isNil(value)) {
    if (param.option('multiple')) {
      value = _lodash2.default.isArray(param.value()) ? param.value() : [param.value()];
    }
    valid = value.length <= _maxlength;
  }
  return {
    valid: valid,
    message: param.name + ' must have length lower than or equal to ' + _maxlength
  };
};

var enumerator = exports.enumerator = function enumerator(_enumerator, value, param) {
  return {
    valid: !_lodash2.default.isArray(_enumerator) || _lodash2.default.isNil(value) || ~_enumerator.indexOf(value),
    message: param.name + ' must be one of: ' + _enumerator.join(', ')
  };
};

var match = exports.match = function match(_match, value, param) {
  return {
    valid: !_lodash2.default.isRegExp(_match) || _lodash2.default.isNil(value) || _match.test(value),
    message: param.name + ' must match regular expression ' + _match
  };
};